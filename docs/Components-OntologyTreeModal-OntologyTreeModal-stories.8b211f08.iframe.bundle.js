"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[7173],{"./stories/Components/OntologyTreeModal/OntologyTreeModal.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{OntologyTreeModalLoadingStory:()=>OntologyTreeModalLoadingStory,OntologyTreeModalStory:()=>OntologyTreeModalStory,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ferlab_ui_core_components_OntologyTreeFilter__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/index.js"),_ferlab_ui_core_components_OntologyTreeFilter__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(_ferlab_ui_core_components_OntologyTreeFilter__WEBPACK_IMPORTED_MODULE_1__),MOCK_API=[{doc_count:7175,filter_by_term:{doc_count:539},key:"Phenotypic abnormality (HP:0000118)",top_hits:{parents:["All (HP:0000001)"]}},{doc_count:277,filter_by_term:{doc_count:18},key:"Abnormal heart valve morphology (HP:0001654)",top_hits:{parents:["Abnormal heart morphology (HP:0001627)"]}},{doc_count:7175,filter_by_term:{doc_count:0},key:"All (HP:0000001)",top_hits:{parents:[]}},{doc_count:4413,filter_by_term:{doc_count:308},key:"Abnormality of the nervous system (HP:0000707)",top_hits:{parents:["Phenotypic abnormality (HP:0000118)"]}},{doc_count:4293,filter_by_term:{doc_count:253},key:"Abnormality of the cardiovascular system (HP:0001626)",top_hits:{parents:["Phenotypic abnormality (HP:0000118)"]}},{doc_count:4353,filter_by_term:{doc_count:0},key:"Abnormal nervous system physiology (HP:0012638)",top_hits:{parents:["Abnormality of the nervous system (HP:0000707)"]}},{doc_count:3729,filter_by_term:{doc_count:202},key:"Abnormality of cardiovascular system morphology (HP:0030680)",top_hits:{parents:["Abnormality of the cardiovascular system (HP:0001626)"]}},{doc_count:3556,filter_by_term:{doc_count:985},key:"Abnormal heart morphology (HP:0001627)",top_hits:{parents:["Abnormality of cardiovascular system morphology (HP:0030680)"]}}];let __WEBPACK_DEFAULT_EXPORT__={title:"@ferlab/Components/OntologyTreeModal",component:_ferlab_ui_core_components_OntologyTreeFilter__WEBPACK_IMPORTED_MODULE_1___default(),decorators:[function(Story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,Story),react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))}]};var OntologyTreeModalStory=function(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,"OntologyTreeModal Story"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_OntologyTreeFilter__WEBPACK_IMPORTED_MODULE_1___default(),{open:!0,data:MOCK_API,loading:!1,handleCancel:function(){return console.log("handleCancel")},handleOnApply:function(){return console.log("handleOnApply")}})))},OntologyTreeModalLoadingStory=function(){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,"OntologyTreeModal Loading Story"),react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_OntologyTreeFilter__WEBPACK_IMPORTED_MODULE_1___default(),{open:!0,data:[],loading:!0,handleCancel:function(){return console.log("handleCancel")},handleOnApply:function(){return console.log("handleOnApply")}})))};OntologyTreeModalStory.parameters={...OntologyTreeModalStory.parameters,docs:{...OntologyTreeModalStory.parameters?.docs,source:{originalSource:"() => <>\n  <h3>OntologyTreeModal Story</h3>\n  <div>\n    <OntologyTreeModal open={true} data={MOCK_API} loading={false} handleCancel={() => console.log('handleCancel')} handleOnApply={() => console.log('handleOnApply')} />\n  </div>\n  </>",...OntologyTreeModalStory.parameters?.docs?.source}}},OntologyTreeModalLoadingStory.parameters={...OntologyTreeModalLoadingStory.parameters,docs:{...OntologyTreeModalLoadingStory.parameters?.docs,source:{originalSource:"() => <>\n  <h3>OntologyTreeModal Loading Story</h3>\n  <div>\n    <OntologyTreeModal open={true} data={[]} loading={true} handleCancel={() => console.log('handleCancel')} handleOnApply={() => console.log('handleOnApply')} />\n  </div>\n  </>",...OntologyTreeModalLoadingStory.parameters?.docs?.source}}};let __namedExportsOrder=["OntologyTreeModalStory","OntologyTreeModalLoadingStory"]},"./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[2]!../packages/ui/core/components/OntologyTreeFilter/index.module.scss":(module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/css-loader/dist/runtime/cssWithMappingToString.js"),_storybook_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_storybook_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__),_storybook_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js"),___CSS_LOADER_EXPORT___=__webpack_require__.n(_storybook_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__)()(_storybook_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default());___CSS_LOADER_EXPORT___.push([module.id,".V97kI4Xz8Z4SQ9BGSo74qA\\=\\= div[class$=transfer-list]{flex:1 1 50%;width:auto;height:auto;min-height:600px}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= div[class$=transfer-list] .-NuNt1d2PftRXx2NhmZcyA\\=\\={background-color:#ff0;display:inherit}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= div[class$=transfer-list] div[class$=-list-body-customize-wrapper]{height:100%}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= div[class$=transfer-list] div[class$=-list-body-customize-wrapper] div[class^=ant-spin-]{height:100%}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= div[class$=transfer-list]:last-child div[class$=-list-body-search-wrapper]{display:none}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= li[class$=-list-content-item] span[class$=-list-content-item-text]{flex:unset}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= li[class$=-list-content-item] div[class$=-list-content-item-remove]{color:#364a63}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= .ant-tree-list-holder-inner{display:block !important}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= .ant-tree-treenode{width:100%}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= .ant-tree-node-content-wrapper{width:100%;display:block}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= .ant-tree-title{display:block;width:100%}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= ._7e1ZZGHyksV0flz8QzIZCw\\=\\={min-width:100px}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= ._7e1ZZGHyksV0flz8QzIZCw\\=\\= .rLuzI1rHkPQXyZLJjd0GBw\\=\\={display:flex;justify-content:center}.V97kI4Xz8Z4SQ9BGSo74qA\\=\\= .PPXXCfIacVRAyEU6kJc4Mg\\=\\={padding-right:4px;margin-bottom:12px}.C1dEZe1z47cmk2m30nXAbQ\\=\\={min-height:600px}.C1dEZe1z47cmk2m30nXAbQ\\=\\= .lHrmahTHWaoTE68Ev6-LBA\\=\\={width:90% !important;overflow:hidden}._48\\+cAlf-yJF-p0dWMjeTPQ\\=\\={display:flex;justify-content:space-between;align-items:baseline}.WxCOqQPsc-\\+bj4GUTGOPyw\\=\\={margin-left:4px;font-size:12px}.sQZUvo8lXjRtiWhrzc2Y1Q\\=\\={display:flex;flex-direction:row;height:700px;width:100%}.sQZUvo8lXjRtiWhrzc2Y1Q\\=\\= :first-child{margin-right:16px}.sQZUvo8lXjRtiWhrzc2Y1Q\\=\\= .r-9x0Ef5kwaqQ5PkXWzccA\\=\\={display:flex;width:100%}","",{version:3,sources:["webpack://./../packages/ui/core/components/OntologyTreeFilter/index.module.scss","webpack://./../packages/ui/themes/default/_colors.scss"],names:[],mappings:"AAGE,sDACE,YAAA,CACA,UAAA,CACA,WAAA,CACA,gBAAA,CAEA,kFACE,qBAAA,CACA,eAAA,CAGF,+FACE,WAAA,CAEA,qHACE,WAAA,CAKF,uGACE,YAAA,CAMJ,+FACE,UAAA,CAGF,gGACE,aCCG,CDGP,wDACE,wBAAA,CAGF,+CACE,UAAA,CAGF,2DACE,UAAA,CACA,aAAA,CAGF,4CACE,aAAA,CACA,UAAA,CAGF,yDACE,eAAA,CAEA,qFACE,YAAA,CACA,sBAAA,CAGJ,wDACE,iBAAA,CACA,kBAAA,CAIJ,4BACE,gBAAA,CACA,wDACE,oBAAA,CACA,eAAA,CAIJ,8BACE,YAAA,CACA,6BAAA,CACA,oBAAA,CAGF,6BACE,eAAA,CACA,cAAA,CAGF,4BACE,YAAA,CACA,kBAAA,CACA,YAAA,CACA,UAAA,CAEA,yCACE,iBAAA,CAGF,wDAEE,YAAA,CACA,UAAA",sourcesContent:["@import \"theme.template\";\n\n.transfer {\n  div[class$='transfer-list'] {\n    flex: 1 1 50%;\n    width: auto;\n    height: auto;\n    min-height: 600px;\n\n    .highlight {\n      background-color: yellow;\n      display: inherit;\n    }\n\n    div[class$='-list-body-customize-wrapper'] {\n      height: 100%;\n\n      div[class^='ant-spin-'] {\n        height: 100%;\n      }\n    }\n\n    &:last-child {\n      div[class$='-list-body-search-wrapper'] {\n        display: none;\n      }\n    }\n  }\n\n  li[class$='-list-content-item'] {\n    span[class$='-list-content-item-text'] {\n      flex: unset;\n    }\n\n    div[class$='-list-content-item-remove'] {\n      color: $gray-8;\n    }\n  }\n\n  :global(.ant-tree-list-holder-inner) {\n    display: block !important;\n  }\n\n  :global(.ant-tree-treenode) {\n    width: 100%;\n  }\n\n  :global(.ant-tree-node-content-wrapper) {\n    width: 100%;\n    display: block;\n  }\n\n  :global(.ant-tree-title) {\n    display: block;\n    width: 100%;\n  }\n\n  .treeNodeParticipants {\n    min-width: 100px;\n\n    .treeNodeParticipantsCount {\n      display: flex;\n      justify-content: center;\n    }\n  }\n  .treeNodeHeader {\n    padding-right: 4px;\n    margin-bottom: 12px;\n  }\n}\n\n.modalWrapper {\n  min-height: 600px;\n  .modal {\n    width: 90% !important;\n    overflow: hidden;\n  }\n}\n\n.treeNodeTitle {\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n}\n\n.code {\n  margin-left: 4px;\n  font-size: 12px;\n}\n\n.loading {\n  display: flex;\n  flex-direction: row;\n  height: 700px;\n  width: 100%;\n\n  :first-child {\n    margin-right: 16px;\n  }\n\n  .skeleton {\n\n    display: flex;\n    width: 100%;\n  }\n}","$white: #fff;\n\n$body-1: #383f72;\n$body-2: #6e7190;\n$body-3: #8a8da8;\n\n$blue-base: #00aceb;\n$blue-1: #eaf3fa;\n$blue-2: #d6f1fb;\n$blue-3: #cfe6f2;\n$blue-4: #8bd7f4;\n$blue-5: #53bee9;\n$blue-6: #23a4d7;\n$blue-7: #008fc7;\n$blue-8: #006aa3;\n$blue-9: #0a5085;\n$blue-10: #063c65;\n\n$geekblue-1: #ebedf9;\n$geekblue-2: #c5cbe8;\n$geekblue-3: #a0aad8;\n$geekblue-4: #7b88c8;\n$geekblue-5: #6476bd;\n$geekblue-6: #4254b1;\n$geekblue-7: #2b388f;\n$geekblue-8: #1b2263;\n$geekblue-9: #0d113d;\n$geekblue-10: #050517;\n\n$gray-1: #ffffff;\n$gray-2: #f8fafc;\n$gray-3: #f1f5f9;\n$gray-4: #e1e8ef;\n$gray-5: #b3c2d3;\n$gray-6: #8b9db2;\n$gray-7: #63768f;\n$gray-8: #364a63;\n$gray-9: #233750;\n$gray-10: #0f1824;\n\n$red-0: #fef4f4;\n$red-1: #fcf6f5;\n$red-2: #ffccc7;\n$red-3: #e6b2a9;\n$red-5: #ff4d4f;\n$red-6: #f5222d;\n$red-7: #a73928;\n$red-8: #a8071a;\n$red-9: #820014;\n\n$gold-2: #fff1b8;\n$gold-9: #613400;\n\n$lime-2: #f4ffb8;\n$lime-9: #254000;\n\n$volcano-2: #ffd8bf;\n$volcano-9: #871400;\n\n$purple-2: #efdbff;\n$purple-7: #531dab;\n$purple-9: #531dab;\n\n$green-2: #d9f7be;\n$green-6: #52c41a;\n$green-7: #389e0d;\n$green-8: #237804;\n\n$green-9: #135200;\n\n$cyan-2: #b5f5ec;\n$cyan-7: #08979c;\n$cyan-9: #00474f;\n\n$orange-2: #ffe7ba;\n$orange-5: #f79122;\n$orange-7: #d46b08;\n$orange-8: #ad4e00;\n$orange-9: #612500;\n\n$magenta-1: #fff0f6;\n$magenta-2: #ffd6e7;\n$magenta-6: #eb2f96;\n$magenta-7: #c41d7f;\n$magenta-9: #6b0547;\n\n$border: #abbed3;\n$layoutBG: #edf0f3;\n\n$primary-color: $blue-base;\n$card-background: $gray-1;\n\n// Colors\n$preset-colors: pink, magenta, red, volcano, orange, yellow, gold, cyan, lime, green, blue, geekblue, purple;\n\n$primary-color: $blue-8;\n$info-color: $blue-6;\n$success-color: $green-6;\n$processing-color: $blue-6;\n$error-color: $red-8;\n$highlight-color: $magenta-6;\n$normal-color: $gray-5;\n$border-color-split: $gray-4;\n\n$grid-layout-resize-color: $gray-7;\n"],sourceRoot:""}]),___CSS_LOADER_EXPORT___.locals={transfer:"V97kI4Xz8Z4SQ9BGSo74qA==",highlight:"-NuNt1d2PftRXx2NhmZcyA==",treeNodeParticipants:"_7e1ZZGHyksV0flz8QzIZCw==",treeNodeParticipantsCount:"rLuzI1rHkPQXyZLJjd0GBw==",treeNodeHeader:"PPXXCfIacVRAyEU6kJc4Mg==",modalWrapper:"C1dEZe1z47cmk2m30nXAbQ==",modal:"lHrmahTHWaoTE68Ev6-LBA==",treeNodeTitle:"_48+cAlf-yJF-p0dWMjeTPQ==",code:"WxCOqQPsc-+bj4GUTGOPyw==",loading:"sQZUvo8lXjRtiWhrzc2Y1Q==",skeleton:"r-9x0Ef5kwaqQ5PkXWzccA=="};let __WEBPACK_DEFAULT_EXPORT__=___CSS_LOADER_EXPORT___},"../packages/ui/core/components/OntologyTreeFilter/index.module.scss":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"),_storybook_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(_storybook_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__),_storybook_node_modules_css_loader_dist_cjs_js_storybook_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_16_use_2_index_module_scss__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[16].use[2]!../packages/ui/core/components/OntologyTreeFilter/index.module.scss"),options={};options.insert="head",options.singleton=!1,_storybook_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_storybook_node_modules_css_loader_dist_cjs_js_storybook_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_16_use_2_index_module_scss__WEBPACK_IMPORTED_MODULE_1__.Z,options);let __WEBPACK_DEFAULT_EXPORT__=_storybook_node_modules_css_loader_dist_cjs_js_storybook_node_modules_sass_loader_dist_cjs_js_ruleSet_1_rules_16_use_2_index_module_scss__WEBPACK_IMPORTED_MODULE_1__.Z.locals||{}},"../packages/ui/core/components/OntologyTreeFilter/OntologyTree.js":function(__unused_webpack_module,exports,__webpack_require__){function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _array_without_holes(arr){if(Array.isArray(arr))return _array_like_to_array(arr)}function _iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _to_consumable_array(arr){return _array_without_holes(arr)||_iterable_to_array(arr)||_unsupported_iterable_to_array(arr)||_non_iterable_spread()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable))&&(desc={enumerable:!0,get:function get(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.OntologyTree=exports.DEFAULT_ONTOLOGY_TREE_DICTIONARY=void 0;var react_1=__importStar(__webpack_require__("./node_modules/react/index.js")),icons_1=__webpack_require__("../packages/ui/node_modules/@ant-design/icons/es/index.js"),antd_1=__webpack_require__("../packages/ui/node_modules/antd/es/index.js"),lodash_1=__webpack_require__("../packages/ui/node_modules/lodash/lodash.js"),Empty_1=__importDefault(__webpack_require__("../packages/ui/core/components/Empty/index.js")),utils_1=__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/utils.js"),index_module_scss_1=__importDefault(__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/index.module.scss"));exports.DEFAULT_ONTOLOGY_TREE_DICTIONARY={emptySelection:"Select items from the left-hand panel in order to add to your query.",participantsCountTooltip:"Participants with this exact term",participantsWithExactTermTooltip:"Participants including descendant terms",searchPlaceholder:"Search for ontology term  - Min 3 characters",selectedCount:function(count){return"".concat(count," unique items")}},exports.OntologyTree=function(param){var data=param.data,_param_dictionary=param.dictionary,dictionary=void 0===_param_dictionary?exports.DEFAULT_ONTOLOGY_TREE_DICTIONARY:_param_dictionary,setTransferTargetKeys=param.setTransferTargetKeys,total=param.total,transferTargetKeys=param.transferTargetKeys,defaultTransferData=(0,utils_1.ontologyTreeToTransferData)(data),defaultTreeData=(0,utils_1.ontologyTreeDataToOntologyDataNode)(data),_ref=_sliced_to_array((0,react_1.useState)(defaultTreeData),2),currentTreeData=_ref[0],setCurrentTreeData=_ref[1],rootNode=currentTreeData[0],_ref1=_sliced_to_array((0,react_1.useState)(rootNode?[rootNode.key]:[]),2),treeExpandedKeys=_ref1[0],setTreeExpandedKeys=_ref1[1],_ref2=_sliced_to_array((0,react_1.useState)([]),2),treeTargetKeys=_ref2[0],setTreeTargetKeys=_ref2[1],_ref3=_sliced_to_array((0,react_1.useState)(total),2),transferSelectedCount=_ref3[0],setTransferSelectedCount=_ref3[1],onSearch=(0,lodash_1.debounce)(function(_,value){if(value&&value.length>=3){var results=(0,utils_1.searchInOntologyTree)(defaultTreeData[0],value);setCurrentTreeData((0,utils_1.disableNodesInTree)(results.tree[0],treeTargetKeys,transferTargetKeys)),setTreeExpandedKeys(results.keys),setTransferSelectedCount(results.selectedCount);return}setTreeExpandedKeys([rootNode.key]),setCurrentTreeData((0,utils_1.disableNodesInTree)(defaultTreeData[0],treeTargetKeys,transferTargetKeys)),setTransferSelectedCount(total)},200),onTreeAction=function(node){var childrenKeys=(0,utils_1.getChildrenKeysByNode)(node),selectedKeys=[node.key].concat(_to_consumable_array(childrenKeys)),checked=node.checked?treeTargetKeys.filter(function(e){return!selectedKeys.includes(e)}):treeTargetKeys.concat(selectedKeys),updatedTransferTargetKeys=(0,utils_1.filterTransferTargetKeys)(transferTargetKeys,node,childrenKeys);setCurrentTreeData((0,utils_1.disableNodesInTree)(rootNode,checked,updatedTransferTargetKeys)),setTreeTargetKeys(checked),setTransferTargetKeys(updatedTransferTargetKeys)};return react_1.default.createElement(antd_1.Transfer,{className:index_module_scss_1.default.transfer,dataSource:defaultTransferData,locale:{notFoundContent:react_1.default.createElement(Empty_1.default,{description:dictionary.emptySelection,imageType:"grid"}),searchPlaceholder:dictionary.searchPlaceholder},onChange:function(newTargetKeys,_,moveKeys){var selectedKeys=[moveKeys[0]].concat(_to_consumable_array((0,utils_1.getChildrenKeysByKey)(rootNode,moveKeys[0])));setTransferTargetKeys(newTargetKeys),setTreeTargetKeys(treeTargetKeys.filter(function(e){return!selectedKeys.includes(e)}))},onSearch:onSearch,oneWay:!0,operationStyle:{visibility:"hidden",width:"5px"},render:function(item){return item.title},selectAllLabels:[function(_){return react_1.default.createElement(react_1.default.Fragment,null,dictionary.selectedCount?dictionary.selectedCount(transferSelectedCount):transferSelectedCount)}],showSearch:!(0,lodash_1.isEmpty)(defaultTreeData),showSelectAll:!1,targetKeys:transferTargetKeys},function(param){if("left"===param.direction)return(0,lodash_1.isEmpty)(currentTreeData)||0===transferSelectedCount?react_1.default.createElement(Empty_1.default,{imageType:"grid"}):react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(antd_1.Row,{className:index_module_scss_1.default.treeNodeHeader,justify:"space-between"},react_1.default.createElement(antd_1.Col,null),react_1.default.createElement(antd_1.Col,null,react_1.default.createElement(antd_1.Row,{className:index_module_scss_1.default.treeNodeParticipants},react_1.default.createElement(antd_1.Col,{className:index_module_scss_1.default.treeNodeParticipantsCount,span:12},react_1.default.createElement(antd_1.Tooltip,{title:dictionary.participantsWithExactTermTooltip},react_1.default.createElement(icons_1.UserOutlined,null))),react_1.default.createElement(antd_1.Col,{className:index_module_scss_1.default.treeNodeParticipantsCount,span:12},react_1.default.createElement(antd_1.Tooltip,{title:dictionary.participantsCountTooltip},react_1.default.createElement(icons_1.BranchesOutlined,null)))))),react_1.default.createElement(antd_1.Tree,{checkable:!0,checkedKeys:treeTargetKeys,expandedKeys:treeExpandedKeys,height:600,multiple:!0,onCheck:function(checked,e){onTreeAction(e.node)},onExpand:function(keys){return setTreeExpandedKeys(keys)},onSelect:function(selected,e){onTreeAction(e.node)},selectedKeys:[],treeData:currentTreeData}))})},exports.default=exports.OntologyTree},"../packages/ui/core/components/OntologyTreeFilter/OntologyTreeTitle.js":function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.findOccurenceIndex=void 0;var react_1=__importDefault(__webpack_require__("./node_modules/react/index.js")),antd_1=__webpack_require__("../packages/ui/node_modules/antd/es/index.js"),utils_1=__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/utils.js"),index_module_scss_1=__importDefault(__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/index.module.scss"));exports.findOccurenceIndex=function(name,query){var index=name.toLowerCase().indexOf(query.toLowerCase());return -1==index&&(index=(0,utils_1.cleanNodeKey)(name).toLowerCase().indexOf(query.toLowerCase())),index};var SearchResultTreeTitle=function(param){var name=param.name,query=param.query,nameLeftParenthesis=name.indexOf("("),queryLeftParenthesis=query.indexOf("("),firstIndex=(0,exports.findOccurenceIndex)(name,query),lastIndex=firstIndex+query.length,beforeText=name.substring(0,firstIndex),termText=name.substring(firstIndex,lastIndex),afterText=name.substring(lastIndex);if(-1!=queryLeftParenthesis){var termTextTitle=termText.substring(0,termText.indexOf("(")),termTextCode=termText.substring(termText.indexOf("("));return react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(antd_1.Typography.Text,null,beforeText,react_1.default.createElement("div",{className:index_module_scss_1.default.highlight},termTextTitle)),react_1.default.createElement(antd_1.Typography.Text,{className:index_module_scss_1.default.code,type:"secondary"},react_1.default.createElement("div",{className:index_module_scss_1.default.highlight},termTextCode),afterText))}if(query.toLowerCase().startsWith(utils_1.HP_CODE)||query.toLowerCase().startsWith(utils_1.MONDO_CODE)){var termTextTitle1=name.substring(0,nameLeftParenthesis);return react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(antd_1.Typography.Text,null,termTextTitle1),react_1.default.createElement(antd_1.Typography.Text,{className:index_module_scss_1.default.code,type:"secondary"},"(",react_1.default.createElement("div",{className:index_module_scss_1.default.highlight},termText),afterText))}if(lastIndex>nameLeftParenthesis){termText=name.substring(firstIndex,lastIndex+1),afterText=afterText.slice(1);var termTextCode1="("+termText.slice(nameLeftParenthesis-lastIndex),termTextTitle2=termText.slice(0,termText.indexOf("("));return react_1.default.createElement(react_1.default.Fragment,null,react_1.default.createElement(antd_1.Typography.Text,null,beforeText,react_1.default.createElement("div",{className:index_module_scss_1.default.highlight},termTextTitle2)),react_1.default.createElement(antd_1.Typography.Text,{className:index_module_scss_1.default.code,type:"secondary"},react_1.default.createElement("div",{className:index_module_scss_1.default.highlight},termTextCode1),afterText))}var termTextCode2=name.substring(nameLeftParenthesis);return afterText=afterText.replace(termTextCode2,""),react_1.default.createElement(antd_1.Typography.Text,null,beforeText,react_1.default.createElement("div",{className:index_module_scss_1.default.highlight},termText),afterText,react_1.default.createElement(antd_1.Typography.Text,{className:index_module_scss_1.default.code,type:"secondary"},termTextCode2))};exports.default=function(param){var name=param.name,participantsCount=param.participantsCount,participantsWithExactTerm=param.participantsWithExactTerm,searchTerm=param.searchTerm,_ref=(0,utils_1.extractCodeAndTitle)(name),code=_ref.code,title=_ref.title;return react_1.default.createElement("div",{className:index_module_scss_1.default.treeNodeTitle},react_1.default.createElement("div",null,searchTerm?react_1.default.createElement(SearchResultTreeTitle,{name:name,query:searchTerm.query}):react_1.default.createElement(react_1.default.Fragment,null,title,react_1.default.createElement(antd_1.Typography.Text,{className:index_module_scss_1.default.code,type:"secondary"},code))),react_1.default.createElement("div",{className:index_module_scss_1.default.treeNodeParticipants},react_1.default.createElement(antd_1.Row,null,react_1.default.createElement(antd_1.Col,{className:index_module_scss_1.default.treeNodeParticipantsCount,md:12},react_1.default.createElement(antd_1.Tag,null,participantsWithExactTerm)),react_1.default.createElement(antd_1.Col,{className:index_module_scss_1.default.treeNodeParticipantsCount,md:12},react_1.default.createElement(antd_1.Tag,null,participantsCount)))))}},"../packages/ui/core/components/OntologyTreeFilter/index.js":function(__unused_webpack_module,exports,__webpack_require__){function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);(!desc||("get"in desc?!m.__esModule:desc.writable||desc.configurable))&&(desc={enumerable:!0,get:function get(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DEFAULT_ONTOLOGY_TREE_MODAL_DICTIONARY=void 0;var react_1=__importStar(__webpack_require__("./node_modules/react/index.js")),antd_1=__webpack_require__("../packages/ui/node_modules/antd/es/index.js"),lodash_1=__webpack_require__("../packages/ui/node_modules/lodash/lodash.js"),operators_1=__webpack_require__("../packages/ui/core/data/sqon/operators.js"),Empty_1=__importDefault(__webpack_require__("../packages/ui/core/components/Empty/index.js")),OntologyTree_1=__importStar(__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/OntologyTree.js")),utils_1=__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/utils.js"),index_module_scss_1=__importDefault(__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/index.module.scss"));exports.DEFAULT_ONTOLOGY_TREE_MODAL_DICTIONARY={allOf:"All of",anyOf:"Any of",cancelText:"Cancel",noneOf:"None of",okText:"Apply",title:"Observed Phenotype (HPO) Browser",tree:OntologyTree_1.DEFAULT_ONTOLOGY_TREE_DICTIONARY},exports.default=function(param){var _a,data=param.data,_param_dictionary=param.dictionary,dictionary=void 0===_param_dictionary?exports.DEFAULT_ONTOLOGY_TREE_MODAL_DICTIONARY:_param_dictionary,handleCancel=param.handleCancel,handleOnApply=param.handleOnApply,loading=param.loading,open=param.open,_ref=_sliced_to_array((0,react_1.useState)([]),2),transferTargetKeys=_ref[0],setTransferTargetKeys=_ref[1],newOntologyData=(0,utils_1.legacyToNewOntologyTreeData)(data);return react_1.default.createElement(antd_1.Modal,{className:index_module_scss_1.default.modal,footer:[react_1.default.createElement(antd_1.Space,{key:"tree-modal-actions"},react_1.default.createElement(antd_1.Button,{onClick:handleCancel},null==dictionary?void 0:dictionary.cancelText),react_1.default.createElement(antd_1.Dropdown.Button,{menu:{items:[{key:operators_1.TermOperators.in,label:dictionary.anyOf},{key:operators_1.TermOperators.all,label:dictionary.allOf},{key:operators_1.TermOperators["some-not-in"],label:dictionary.noneOf}],onClick:function(e){return handleOnApply((0,utils_1.flattenTransferTargetKeys)(transferTargetKeys),e.key)}},onClick:function(){return handleOnApply((0,utils_1.flattenTransferTargetKeys)(transferTargetKeys),operators_1.TermOperators.in)},type:"primary"},dictionary.okText))],onCancel:handleCancel,open:open,title:dictionary.title,wrapClassName:index_module_scss_1.default.modalWrapper},loading&&react_1.default.createElement("div",{className:index_module_scss_1.default.loading},react_1.default.createElement("div",{className:index_module_scss_1.default.skeleton},react_1.default.createElement(antd_1.Skeleton,{active:!0,paragraph:{rows:20},title:!0})),react_1.default.createElement("div",{className:index_module_scss_1.default.skeleton},react_1.default.createElement(antd_1.Skeleton,{active:!0,paragraph:{rows:20},title:!0}))),!loading&&(0,lodash_1.isEmpty)(data)&&react_1.default.createElement("div",{className:index_module_scss_1.default.loading},react_1.default.createElement(Empty_1.default,{imageType:"grid"})),!loading&&!(0,lodash_1.isEmpty)(data)&&react_1.default.createElement(OntologyTree_1.default,{data:newOntologyData,dictionary:dictionary.tree,setTransferTargetKeys:setTransferTargetKeys,total:data.length-1,transferTargetKeys:transferTargetKeys}))}},"../packages/ui/core/components/OntologyTreeFilter/utils.js":function(__unused_webpack_module,exports,__webpack_require__){function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_with_holes(arr){if(Array.isArray(arr))return arr}function _array_without_holes(arr){if(Array.isArray(arr))return _array_like_to_array(arr)}function _iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function _iterable_to_array_limit(arr,i){var _s,_e,_i=null==arr?null:"undefined"!=typeof Symbol&&arr[Symbol.iterator]||arr["@@iterator"];if(null!=_i){var _arr=[],_n=!0,_d=!1;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done)&&(_arr.push(_s.value),!i||_arr.length!==i);_n=!0);}catch(err){_d=!0,_e=err}finally{try{_n||null==_i.return||_i.return()}finally{if(_d)throw _e}}return _arr}}function _non_iterable_rest(){throw TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _sliced_to_array(arr,i){return _array_with_holes(arr)||_iterable_to_array_limit(arr,i)||_unsupported_iterable_to_array(arr,i)||_non_iterable_rest()}function _to_consumable_array(arr){return _array_without_holes(arr)||_iterable_to_array(arr)||_unsupported_iterable_to_array(arr)||_non_iterable_spread()}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.cleanNodeKey=exports.extractCodeAndTitle=exports.flattenTransferTargetKeys=exports.filterTransferTargetKeys=exports.getChildrenKeysByKey=exports.getChildrenKeysByNode=exports.disableNodesInTree=exports.searchInOntologyTree=exports.ontologyTreeToTransferData=exports.ontologyTreeDataToOntologyDataNode=exports.legacyToNewOntologyTreeData=exports.MONDO_CODE=exports.HP_CODE=exports.TITLE_AND_CODE_REGEX=exports.MATCH_SPECIAL_CHARACTERS_REGEX=exports.EXCLUDED_NODES=void 0;var react_1=__importDefault(__webpack_require__("./node_modules/react/index.js")),OntologyTreeTitle_1=__importDefault(__webpack_require__("../packages/ui/core/components/OntologyTreeFilter/OntologyTreeTitle.js"));exports.EXCLUDED_NODES=["MONDO:0042489","(HP:0000001)"],exports.MATCH_SPECIAL_CHARACTERS_REGEX=/[\\^$*+?.()|[\]{}]/g,exports.TITLE_AND_CODE_REGEX=/^(.+?)\s*(\([Mondo:|HP:][^)]+\))/gi,exports.HP_CODE="hp:",exports.MONDO_CODE="mondo:",exports.legacyToNewOntologyTreeData=function(data){var result=[];return data.forEach(function(parent){var children=[];data.forEach(function(child){child.top_hits.parents.includes(parent.key)&&children.push(child.key)}),result.push({doc_count:parent.doc_count,filter_by_term:parent.filter_by_term,key:parent.key,top_hits:{children:children,parents:parent.top_hits.parents}})}),result},exports.ontologyTreeDataToOntologyDataNode=function(data){var _a,_b,_c,_d,rootOntologyNode=data.find(function(node){return 0===node.top_hits.parents.length});if(!rootOntologyNode)return[];var recursiveNodeCreate=function(node,parentNodePath){var result=[];return node.top_hits.children.forEach(function(key){var _a,_b,_c,child=data.find(function(e){return e.key===key});if(child){var participantsCount=null!==(_a=child.doc_count)&&void 0!==_a?_a:0,participantsWithExactTerm=null!==(_c=null===(_b=child.filter_by_term)||void 0===_b?void 0:_b.doc_count)&&void 0!==_c?_c:0,nodePath=parentNodePath.length>0?(0,exports.cleanNodeKey)("".concat(parentNodePath,"-").concat(child.key)):(0,exports.cleanNodeKey)(child.key);result.push({children:recursiveNodeCreate(child,nodePath),key:nodePath,name:child.key,participantsCount:participantsCount,participantsWithExactTerm:participantsWithExactTerm,path:null!=parentNodePath?parentNodePath:"",title:react_1.default.createElement(OntologyTreeTitle_1.default,{name:child.key,participantsCount:participantsCount,participantsWithExactTerm:participantsWithExactTerm})})}}),result},participantsCount=null!==(_a=rootOntologyNode.doc_count)&&void 0!==_a?_a:0,participantsWithExactTerm=null!==(_c=null===(_b=rootOntologyNode.filter_by_term)||void 0===_b?void 0:_b.doc_count)&&void 0!==_c?_c:0;return _to_consumable_array({children:recursiveNodeCreate(rootOntologyNode,""),count:null===(_d=rootOntologyNode.filter_by_term)||void 0===_d?void 0:_d.doc_count,key:rootOntologyNode.key,name:rootOntologyNode.key,participantsCount:participantsCount,participantsWithExactTerm:participantsWithExactTerm,title:react_1.default.createElement(OntologyTreeTitle_1.default,{name:rootOntologyNode.key,participantsCount:participantsCount,participantsWithExactTerm:participantsWithExactTerm})}.children)},exports.ontologyTreeToTransferData=function(data){var rootOntologyNode=data.find(function(node){return 0===node.top_hits.parents.length});if(!rootOntologyNode)return[];var transferData=[],recursive=function(node,parentNodePath){return node.top_hits.children.forEach(function(key){var child=data.find(function(e){return e.key===key});if(child){var nodePath=parentNodePath.length>0?(0,exports.cleanNodeKey)("".concat(parentNodePath,"-").concat(child.key)):(0,exports.cleanNodeKey)(child.key);transferData.push({key:nodePath,title:child.key}),recursive(child,nodePath)}}),[]};return recursive(rootOntologyNode,""),transferData.push({key:rootOntologyNode.key,title:rootOntologyNode.key}),transferData},exports.searchInOntologyTree=function(rootNode,query){var cleanSearchText=query.replace(exports.MATCH_SPECIAL_CHARACTERS_REGEX,"").replace(/\s+/g,"\\s*"),searchRegex=RegExp("(\\b\\w*"+cleanSearchText.split(" ").join("\\s*\\w*")+"\\w*\\b)","gi"),keys=[],tree=[],allNodeKeys=[],matchingAll=[],matchingNodePaths=[],matchingNodes=[],matchingExact=0,recursiveSearch=function(node){var results=[];return allNodeKeys.push(node.key),node.children.forEach(function(child){child.key.search(searchRegex)>=0&&(keys.push(child.key),matchingNodes.push(child.key)),results.push(Object.assign(Object.assign({},child),{children:recursiveSearch(child)}))}),results},recursiveIndexSearch=function(node){var results=[];return allNodeKeys.push(node.key),node.children.forEach(function(child){var _split=_sliced_to_array((0,exports.cleanNodeKey)(child.name).split(searchRegex),3),before=_split[0],term=_split[1],after=_split[2];term&&(matchingExact+=1),results.push(Object.assign(Object.assign({},child),{children:recursiveIndexSearch(child),hasSearchTerm:matchingAll.includes(child.key),title:react_1.default.createElement(OntologyTreeTitle_1.default,{name:child.name,participantsCount:child.participantsCount,participantsWithExactTerm:child.participantsWithExactTerm,searchTerm:term?{after:after,before:before,query:query,regex:cleanSearchText,term:term}:void 0})}))}),results.filter(function(result){return result.hasSearchTerm})};if(recursiveSearch(rootNode),matchingNodes.forEach(function(nodeKey){var nodePaths=nodeKey.split("-");nodePaths.pop();var currentNodePath=[];nodePaths.forEach(function(path){currentNodePath.push(path);var result=allNodeKeys.find(function(node){return node===currentNodePath.join("-")});result&&(matchingNodePaths.push(result),keys.push(result))})}),0===(matchingAll=matchingNodes.concat(matchingNodePaths)).length)return{keys:[],selectedCount:0,tree:[rootNode]};var _rootNode_name_split=_sliced_to_array(rootNode.name.split(searchRegex),3),before=_rootNode_name_split[0],term=_rootNode_name_split[1],after=_rootNode_name_split[2];return keys.push(rootNode.key),tree.push(Object.assign(Object.assign({},rootNode),{children:recursiveIndexSearch(rootNode),title:react_1.default.createElement(OntologyTreeTitle_1.default,{name:rootNode.name,participantsCount:rootNode.participantsCount,participantsWithExactTerm:rootNode.participantsWithExactTerm,searchTerm:term?{after:after,before:before,query:query,regex:cleanSearchText,term:term}:void 0})})),{keys:keys,selectedCount:matchingExact,tree:tree}},exports.disableNodesInTree=function(rootNode,disabledKeys,enabledKeys){if(!rootNode)return[];var recursive=function(node){var results=[];return node.children.forEach(function(child){if(disabledKeys.includes(child.key)&&!enabledKeys.includes(child.key)){results.push(Object.assign(Object.assign({},child),{children:recursive(child),disableCheckbox:!0,disabled:!0}));return}results.push(Object.assign(Object.assign({},child),{children:recursive(child),disableCheckbox:!1,disabled:!1}))}),results};return[Object.assign(Object.assign({},rootNode),{children:recursive(rootNode)})]},exports.getChildrenKeysByNode=function(node){if(!node)return[];var keys=[],recursive=function(node){keys.push(node.key),node.children.forEach(function(child){recursive(child)})};return node.children.forEach(function(child){recursive(child)}),keys},exports.getChildrenKeysByKey=function(rootNode,key){if(rootNode.key===key)return(0,exports.getChildrenKeysByNode)(rootNode);var targetNode,result=[],recursive=function(node){if(node.key===key){targetNode=node,result=(0,exports.getChildrenKeysByNode)(targetNode);return}targetNode||0!==result.length||node.children.forEach(function(child){recursive(child)})};return rootNode.children.forEach(function(child){recursive(child)}),result},exports.filterTransferTargetKeys=function(keys,node,childrenKeys){if(keys.includes(node.key))return keys.filter(function(key){return key!=node.key});var keysToRemove=[];return keys.forEach(function(key){childrenKeys.includes(key)&&keysToRemove.push(key)}),_to_consumable_array(keys.filter(function(key){return!keysToRemove.includes(key)})).concat([node.key])},exports.flattenTransferTargetKeys=function(keys){var result=[];return keys.map(function(key){var phenotype=key.split("-").pop();phenotype&&result.push(phenotype)}),result},exports.extractCodeAndTitle=function(value){var result=value.split(exports.TITLE_AND_CODE_REGEX).filter(function(v){return v.length>0});return{code:result[1],title:result[0]}},exports.cleanNodeKey=function(key){return key.replaceAll(exports.MATCH_SPECIAL_CHARACTERS_REGEX,"")}},"../packages/ui/core/data/sqon/operators.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FilterOperators=exports.BooleanOperators=exports.TermOperators=exports.RangeOperators=exports.FieldOperators=void 0,function(FieldOperators){FieldOperators[">"]=">",FieldOperators["<"]="<",FieldOperators.between="between",FieldOperators[">="]=">=",FieldOperators["<="]="<=",FieldOperators.in="in",FieldOperators["not-in"]="not-in",FieldOperators["some-not-in"]="some-not-in",FieldOperators.all="all"}(exports.FieldOperators||(exports.FieldOperators={})),function(RangeOperators){RangeOperators[">"]=">",RangeOperators["<"]="<",RangeOperators.between="between",RangeOperators[">="]=">=",RangeOperators["<="]="<=",RangeOperators.in="in"}(exports.RangeOperators||(exports.RangeOperators={})),function(TermOperators){TermOperators.in="in",TermOperators["not-in"]="not-in",TermOperators.all="all",TermOperators["some-not-in"]="some-not-in"}(exports.TermOperators||(exports.TermOperators={})),function(BooleanOperators){BooleanOperators.and="and",BooleanOperators.or="or",BooleanOperators.not="not"}(exports.BooleanOperators||(exports.BooleanOperators={})),(exports.FilterOperators||(exports.FilterOperators={})).filter="filter"}}]);