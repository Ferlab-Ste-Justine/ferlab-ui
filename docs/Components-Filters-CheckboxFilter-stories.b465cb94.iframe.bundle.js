"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[4909],{"./stories/Components/Filters/CheckboxFilter.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithBigCount:()=>WithBigCount,WithDictionary:()=>WithDictionary,WithFew:()=>WithFew,WithFooter:()=>WithFooter,WithFrenchTranslation:()=>WithFrenchTranslation,WithMore:()=>WithMore,WithNoData:()=>WithNoData,WithNoDataCheckbox:()=>WithNoDataCheckbox,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ferlab_ui_core_components_filters_CheckboxFilter__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("../packages/ui/core/components/filters/CheckboxFilter/index.js"),_ferlab_ui_core_components_filters_types__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("../packages/ui/core/components/filters/types.js"),_data__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./stories/Components/Filters/data.ts");function _define_property(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}function _object_spread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{},ownKeys=Object.keys(source);"function"==typeof Object.getOwnPropertySymbols&&(ownKeys=ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym){return Object.getOwnPropertyDescriptor(source,sym).enumerable}))),ownKeys.forEach(function(key){_define_property(target,key,source[key])})}return target}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable})),keys.push.apply(keys,symbols)}return keys}function _object_spread_props(target,source){return source=null!=source?source:{},Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}),target}function _object_without_properties(source,excluded){if(null==source)return{};var key,i,target=_object_without_properties_loose(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],!(excluded.indexOf(key)>=0)&&Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}function _object_without_properties_loose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}let __WEBPACK_DEFAULT_EXPORT__={title:"@ferlab/Components/Filters/CheckboxFilter",component:_ferlab_ui_core_components_filters_CheckboxFilter__WEBPACK_IMPORTED_MODULE_2__.CheckboxFilter,decorators:[function(Story){return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"story_container",style:{display:"inline-grid",minWidth:"260px"}},react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null)))}],argTypes:{className:{control:"string"},children:{control:"object"}}};var TermFilterStory=function(_param){var title=_param.title,maxShowing=_param.maxShowing,filterGroup=_param.filterGroup,onChange=_param.onChange,props=_object_without_properties(_param,["title","maxShowing","filterGroup","onChange"]);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement("h3",null,title),react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_filters_CheckboxFilter__WEBPACK_IMPORTED_MODULE_2__.CheckboxFilter,_object_spread({maxShowing:maxShowing,filterGroup:filterGroup,onChange:onChange},props)))},filterGroup={type:_ferlab_ui_core_components_filters_types__WEBPACK_IMPORTED_MODULE_3__.VisualType.Checkbox,field:"this.field",title:"title_filter_group"},onChangeTypeStory=function(){return null},WithDictionary=TermFilterStory.bind({});WithDictionary.args={title:"CheckboxFilter Dictionary",maxShowing:6,filterGroup:_object_spread_props(_object_spread({},filterGroup),{config:{extraFilterDictionary:["extra_filter_1","extra_filter_2"]}}),onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.u8),hasSearchInput:!0,filters:_data__WEBPACK_IMPORTED_MODULE_1__.VL};var WithMore=TermFilterStory.bind({});WithMore.args={title:"CheckboxFilter More",maxShowing:6,filterGroup:filterGroup,onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.u8),hasSearchInput:!0,filters:_data__WEBPACK_IMPORTED_MODULE_1__.u8};var WithFew=TermFilterStory.bind({});WithFew.args={title:"CheckboxFilter Few",maxShowing:6,filterGroup:filterGroup,onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.u8),hasSearchInput:!0,filters:_data__WEBPACK_IMPORTED_MODULE_1__.u8.slice(0,4)};var WithNoData=TermFilterStory.bind({});WithNoData.args={title:"CheckboxFilter No Data",maxShowing:6,filterGroup:filterGroup,onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.u8),hasSearchInput:!0,filters:[]};var WithNoDataCheckbox=TermFilterStory.bind({});WithNoDataCheckbox.args={title:"CheckboxFilter No Data checkbox",maxShowing:6,filterGroup:filterGroup,onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.u8),hasSearchInput:!0,filters:_data__WEBPACK_IMPORTED_MODULE_1__.VL};var WithBigCount=TermFilterStory.bind({});WithBigCount.args={dictionary:_data__WEBPACK_IMPORTED_MODULE_1__.Wd,title:"CheckboxFilter Big Count",maxShowing:6,filterGroup:filterGroup,onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.Ts),hasSearchInput:!0,filters:_data__WEBPACK_IMPORTED_MODULE_1__.Ts};var WithFrenchTranslation=TermFilterStory.bind({});WithFrenchTranslation.args={dictionary:_data__WEBPACK_IMPORTED_MODULE_1__.Wd,title:"CheckboxFilter in French",maxShowing:6,filterGroup:filterGroup,onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.u8),hasSearchInput:!0,filters:_data__WEBPACK_IMPORTED_MODULE_1__.u8};var WithFooter=TermFilterStory.bind({});WithFooter.args={dictionary:_data__WEBPACK_IMPORTED_MODULE_1__.Wd,title:"CheckboxFilter in French",maxShowing:6,filterGroup:_object_spread_props(_object_spread({},filterGroup),{config:{nameMapping:{},withFooter:!0}}),onChangeType:onChangeTypeStory(filterGroup,_data__WEBPACK_IMPORTED_MODULE_1__.u8),hasSearchInput:!0,filters:_data__WEBPACK_IMPORTED_MODULE_1__.u8},WithDictionary.parameters={...WithDictionary.parameters,docs:{...WithDictionary.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithDictionary.parameters?.docs?.source}}},WithMore.parameters={...WithMore.parameters,docs:{...WithMore.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithMore.parameters?.docs?.source}}},WithFew.parameters={...WithFew.parameters,docs:{...WithFew.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithFew.parameters?.docs?.source}}},WithNoData.parameters={...WithNoData.parameters,docs:{...WithNoData.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithNoData.parameters?.docs?.source}}},WithNoDataCheckbox.parameters={...WithNoDataCheckbox.parameters,docs:{...WithNoDataCheckbox.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithNoDataCheckbox.parameters?.docs?.source}}},WithBigCount.parameters={...WithBigCount.parameters,docs:{...WithBigCount.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithBigCount.parameters?.docs?.source}}},WithFrenchTranslation.parameters={...WithFrenchTranslation.parameters,docs:{...WithFrenchTranslation.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithFrenchTranslation.parameters?.docs?.source}}},WithFooter.parameters={...WithFooter.parameters,docs:{...WithFooter.parameters?.docs,source:{originalSource:"({\n  title,\n  maxShowing,\n  filterGroup,\n  onChange,\n  ...props\n}: {\n  title: string;\n  maxShowing: number;\n  filterGroup: IFilterGroup;\n  onChange: onChangeType;\n  hasSearchInput: boolean;\n  filters: IFilter<IFilterCount>[];\n  dictionary: IDictionary;\n  props: Story<TermFilterProps>;\n}) => <>\n        <h3>{title}</h3>\n        <CheckboxFilter maxShowing={maxShowing} filterGroup={filterGroup} onChange={onChange} {...props} />\n    </>",...WithFooter.parameters?.docs?.source}}};let __namedExportsOrder=["WithDictionary","WithMore","WithFew","WithNoData","WithNoDataCheckbox","WithBigCount","WithFrenchTranslation","WithFooter"]}}]);