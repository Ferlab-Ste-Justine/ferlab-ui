"use strict";(self.webpackChunkstorybook=self.webpackChunkstorybook||[]).push([[7482],{"./stories/Components/Chart/vennWithSelect.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{VennChartWithEntitySwitchedByDefault:()=>VennChartWithEntitySwitchedByDefault,VennChartWithThreeSets:()=>VennChartWithThreeSets,VennChartWithThreeSetsWithInvalidValues:()=>VennChartWithThreeSetsWithInvalidValues,VennChartWithTwoSets:()=>VennChartWithTwoSets,VennLoading:()=>VennLoading,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("../packages/ui/core/components/Charts/Venn/VennChartWithSelect.js"),_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1___default=/*#__PURE__*/__webpack_require__.n(_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1__),_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@ant-design/icons/es/icons/UserOutlined.js"),_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@ant-design/icons/es/icons/ExperimentOutlined.js"),_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@ant-design/icons/es/icons/FileTextOutlined.js");function _array_like_to_array(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=Array(len);i<len;i++)arr2[i]=arr[i];return arr2}function _array_without_holes(arr){if(Array.isArray(arr))return _array_like_to_array(arr)}function _iterable_to_array(iter){if("undefined"!=typeof Symbol&&null!=iter[Symbol.iterator]||null!=iter["@@iterator"])return Array.from(iter)}function _non_iterable_spread(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupported_iterable_to_array(o,minLen){if(o){if("string"==typeof o)return _array_like_to_array(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if("Object"===n&&o.constructor&&(n=o.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _array_like_to_array(o,minLen)}}var qbSqon={op:"and",content:[{content:{value:["something"],field:"test"},op:"in"},{content:{value:["false"],field:"test1"},op:"in"}]},summary2=[{operation:"Q₁",qbSqon:qbSqon,entityCount:1e3},{operation:"Q₂",qbSqon:qbSqon,entityCount:1200}],summary3=(function _to_consumable_array(arr){return _array_without_holes(arr)||_iterable_to_array(arr)||_unsupported_iterable_to_array(arr)||_non_iterable_spread()})(summary2).concat([{operation:"Q₃",qbSqon:qbSqon,entityCount:700}]),operations2=[{setId:"Q₁",operation:"(Q₁)-(Q₁∩Q₂)",entitySqon:qbSqon,entityCount:900},{setId:"Q₂",operation:"(Q₂)-(Q₁∩Q₂)",entitySqon:qbSqon,entityCount:1100},{setId:"Q₁∩Q₂",operation:"(Q₁∩Q₂)",entitySqon:qbSqon,entityCount:300}],operations3=[{setId:"Q₁",operation:"(Q₁)-(Q₂∩Q₃)",entitySqon:qbSqon,entityCount:900},{setId:"Q₂",operation:"(Q₂)-(Q₁∩Q₃)",entitySqon:qbSqon,entityCount:1100},{setId:"Q₃",operation:"(Q₃)-(Q₁∩Q₃)",entitySqon:qbSqon,entityCount:400},{setId:"Q₁∩Q₂",operation:"(Q₁∩Q₂)-(Q₃)",entitySqon:qbSqon,entityCount:300},{setId:"Q₂∩Q₃",operation:"(Q₂∩Q₃)-(Q₁)",entitySqon:qbSqon,entityCount:400},{setId:"Q₁∩Q₃",operation:"(Q₁∩Q₃)-(Q₂)",entitySqon:qbSqon,entityCount:500},{setId:"Q₁∩Q₂∩Q₃",operation:"(Q₁∩Q₂∩Q₃)",entitySqon:qbSqon,entityCount:100}],operations3WithInvalids=[{setId:"Q₁",operation:"(Q₁)-(Q₂∩Q₃)",entitySqon:qbSqon,entityCount:5001},{setId:"Q₂",operation:"(Q₂)-(Q₁∩Q₃)",entitySqon:qbSqon,entityCount:0},{setId:"Q₃",operation:"(Q₃)-(Q₁∩Q₃)",entitySqon:qbSqon,entityCount:5e3},{setId:"Q₁∩Q₂",operation:"(Q₁∩Q₂)-(Q₃)",entitySqon:qbSqon,entityCount:10001},{setId:"Q₂∩Q₃",operation:"(Q₂∩Q₃)-(Q₁)",entitySqon:qbSqon,entityCount:0},{setId:"Q₁∩Q₃",operation:"(Q₁∩Q₃)-(Q₂)",entitySqon:qbSqon,entityCount:0},{setId:"Q₁∩Q₂∩Q₃",operation:"(Q₁∩Q₂∩Q₃)",entitySqon:qbSqon,entityCount:100}];let __WEBPACK_DEFAULT_EXPORT__={title:"@ferlab/Components/Charts/Venn/VennChartWithSelect",component:_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1___default(),decorators:[function(Story){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,Story),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(Story,null))}]};var VennLoading=function(){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Venn Chart"),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"1200px",height:"600px"}},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1___default(),{loading:!0,handleIndexChange:function handleIndexChange(queries,index){throw Error("Function not implemented.")},options:[{label:"Participants",value:"participant",tabId:"participants",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__.A,{size:16})},{label:"Biospecimens",value:"biospecimen",tabId:"biospecimens",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__.A,{size:16})},{label:"Data files",value:"file",tabId:"data files",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__.A,{size:16})}],handleClose:function handleClose(){throw Error("Function not implemented.")},savedSets:[],handleSubmit:function handleSubmit(){throw Error("Function not implemented.")},analytics:{trackVennViewInExploration:function trackVennViewInExploration(){throw Error("Function not implemented.")},trackVennClickOnSections:function trackVennClickOnSections(){throw Error("Function not implemented.")},trackVennViewSet:function trackVennViewSet(){throw Error("Function not implemented.")},trackVennViewEntityCounts:function trackVennViewEntityCounts(type,entityCount){throw Error("Function not implemented.")}}})))},VennChartWithTwoSets=function(){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Venn Chart with 2 sets"),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"1200px",height:"600px"}},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1___default(),{summary:summary2,operations:operations2,handleIndexChange:function handleIndexChange(queries,index){throw Error("Function not implemented.")},handleClose:function handleClose(){throw Error("Function not implemented.")},savedSets:[],handleSubmit:function handleSubmit(){throw Error("Function not implemented.")},options:[{label:"Participants",value:"participant",tabId:"participants",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__.A,{size:16})},{label:"Biospecimens",value:"biospecimen",tabId:"biospecimens",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__.A,{size:16})},{label:"Data files",value:"file",tabId:"data files",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__.A,{size:16})}],analytics:{trackVennViewInExploration:function trackVennViewInExploration(){throw Error("Function not implemented.")},trackVennClickOnSections:function trackVennClickOnSections(){throw Error("Function not implemented.")},trackVennViewSet:function trackVennViewSet(){throw Error("Function not implemented.")},trackVennViewEntityCounts:function trackVennViewEntityCounts(type,entityCount){throw Error("Function not implemented.")}},size:{width:540,height:498}})))},VennChartWithThreeSets=function(){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Venn Chart with 3 sets"),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"1200px",height:"600px"}},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1___default(),{summary:summary3,operations:operations3,handleIndexChange:function handleIndexChange(queries,index){throw Error("Function not implemented.")},handleClose:function handleClose(){throw Error("Function not implemented.")},savedSets:[],handleSubmit:function handleSubmit(){throw Error("Function not implemented.")},options:[{label:"Participants",value:"participant",tabId:"participants",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__.A,{size:16})},{label:"Biospecimens",value:"biospecimen",tabId:"biospecimens",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__.A,{size:16})},{label:"Data files",value:"file",tabId:"data files",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__.A,{size:16})}],analytics:{trackVennViewInExploration:function trackVennViewInExploration(){throw Error("Function not implemented.")},trackVennClickOnSections:function trackVennClickOnSections(){throw Error("Function not implemented.")},trackVennViewSet:function trackVennViewSet(){throw Error("Function not implemented.")},trackVennViewEntityCounts:function trackVennViewEntityCounts(type,entityCount){throw Error("Function not implemented.")}}})))},VennChartWithThreeSetsWithInvalidValues=function(){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Venn Chart with 3 sets"),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"1200px",height:"600px"}},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1___default(),{summary:summary3,operations:operations3WithInvalids,handleIndexChange:function handleIndexChange(queries,index){throw Error("Function not implemented.")},handleClose:function handleClose(){throw Error("Function not implemented.")},savedSets:[],handleSubmit:function handleSubmit(){throw Error("Function not implemented.")},options:[{label:"Participants",value:"participant",tabId:"participants",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__.A,{size:16})},{label:"Biospecimens",value:"biospecimen",tabId:"biospecimens",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__.A,{size:16})},{label:"Data files",value:"file",tabId:"data files",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__.A,{size:16})}],analytics:{trackVennViewInExploration:function trackVennViewInExploration(){throw Error("Function not implemented.")},trackVennClickOnSections:function trackVennClickOnSections(){throw Error("Function not implemented.")},trackVennViewSet:function trackVennViewSet(){throw Error("Function not implemented.")},trackVennViewEntityCounts:function trackVennViewEntityCounts(type,entityCount){throw Error("Function not implemented.")}}})))},VennChartWithEntitySwitchedByDefault=function(){return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment,null,/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("h2",null,"Venn Chart with 3 sets"),/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{style:{width:"1200px",height:"600px"}},/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ferlab_ui_core_components_Charts_Venn_VennChartWithSelect__WEBPACK_IMPORTED_MODULE_1___default(),{summary:summary3,operations:operations3WithInvalids,handleIndexChange:function handleIndexChange(queries,index){throw Error("Function not implemented.")},handleClose:function handleClose(){throw Error("Function not implemented.")},savedSets:[],handleSubmit:function handleSubmit(){throw Error("Function not implemented.")},options:[{label:"Participants",value:"participant",tabId:"participants",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_2__.A,{size:16})},{label:"Biospecimens",value:"biospecimen",tabId:"biospecimens",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_3__.A,{size:16})},{label:"Data files",value:"file",tabId:"data files",icon:/*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ant_design_icons__WEBPACK_IMPORTED_MODULE_4__.A,{size:16})}],analytics:{trackVennViewInExploration:function trackVennViewInExploration(){throw Error("Function not implemented.")},trackVennClickOnSections:function trackVennClickOnSections(){throw Error("Function not implemented.")},trackVennViewSet:function trackVennViewSet(){throw Error("Function not implemented.")},trackVennViewEntityCounts:function trackVennViewEntityCounts(type,entityCount){throw Error("Function not implemented.")}}})))};VennLoading.parameters={...VennLoading.parameters,docs:{...VennLoading.parameters?.docs,source:{originalSource:"() => <>\n        <h2>Venn Chart</h2>\n        <div style={{\n    width: '1200px',\n    height: '600px'\n  }}>\n            <VennChart loading={true} handleIndexChange={function (queries, index): void {\n      throw new Error('Function not implemented.');\n    }} options={[{\n      label: 'Participants',\n      value: 'participant',\n      tabId: 'participants',\n      icon: <UserOutlined size={16} />\n    }, {\n      label: 'Biospecimens',\n      value: 'biospecimen',\n      tabId: 'biospecimens',\n      icon: <ExperimentOutlined size={16} />\n    }, {\n      label: 'Data files',\n      value: 'file',\n      tabId: 'data files',\n      icon: <FileTextOutlined size={16} />\n    }]} handleClose={function (): void {\n      throw new Error('Function not implemented.');\n    }} savedSets={[]} handleSubmit={function (): void {\n      throw new Error('Function not implemented.');\n    }} analytics={{\n      trackVennViewInExploration: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennClickOnSections: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewSet: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewEntityCounts: function (type: string, entityCount: number): void {\n        throw new Error('Function not implemented.');\n      }\n    }} />\n        </div>\n    </>",...VennLoading.parameters?.docs?.source}}},VennChartWithTwoSets.parameters={...VennChartWithTwoSets.parameters,docs:{...VennChartWithTwoSets.parameters?.docs,source:{originalSource:"() => <>\n        <h2>Venn Chart with 2 sets</h2>\n        <div style={{\n    width: '1200px',\n    height: '600px'\n  }}>\n            <VennChart summary={summary2} operations={operations2} handleIndexChange={function (queries, index): void {\n      throw new Error('Function not implemented.');\n    }} handleClose={function (): void {\n      throw new Error('Function not implemented.');\n    }} savedSets={[]} handleSubmit={function (): void {\n      throw new Error('Function not implemented.');\n    }} options={[{\n      label: 'Participants',\n      value: 'participant',\n      tabId: 'participants',\n      icon: <UserOutlined size={16} />\n    }, {\n      label: 'Biospecimens',\n      value: 'biospecimen',\n      tabId: 'biospecimens',\n      icon: <ExperimentOutlined size={16} />\n    }, {\n      label: 'Data files',\n      value: 'file',\n      tabId: 'data files',\n      icon: <FileTextOutlined size={16} />\n    }]} analytics={{\n      trackVennViewInExploration: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennClickOnSections: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewSet: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewEntityCounts: function (type: string, entityCount: number): void {\n        throw new Error('Function not implemented.');\n      }\n    }} size={{\n      width: 540,\n      height: 498\n    }} />\n        </div>\n    </>",...VennChartWithTwoSets.parameters?.docs?.source}}},VennChartWithThreeSets.parameters={...VennChartWithThreeSets.parameters,docs:{...VennChartWithThreeSets.parameters?.docs,source:{originalSource:"() => <>\n        <h2>Venn Chart with 3 sets</h2>\n        <div style={{\n    width: '1200px',\n    height: '600px'\n  }}>\n            <VennChart summary={summary3} operations={operations3} handleIndexChange={function (queries, index): void {\n      throw new Error('Function not implemented.');\n    }} handleClose={function (): void {\n      throw new Error('Function not implemented.');\n    }} savedSets={[]} handleSubmit={function (): void {\n      throw new Error('Function not implemented.');\n    }} options={[{\n      label: 'Participants',\n      value: 'participant',\n      tabId: 'participants',\n      icon: <UserOutlined size={16} />\n    }, {\n      label: 'Biospecimens',\n      value: 'biospecimen',\n      tabId: 'biospecimens',\n      icon: <ExperimentOutlined size={16} />\n    }, {\n      label: 'Data files',\n      value: 'file',\n      tabId: 'data files',\n      icon: <FileTextOutlined size={16} />\n    }]} analytics={{\n      trackVennViewInExploration: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennClickOnSections: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewSet: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewEntityCounts: function (type: string, entityCount: number): void {\n        throw new Error('Function not implemented.');\n      }\n    }} />\n        </div>\n    </>",...VennChartWithThreeSets.parameters?.docs?.source}}},VennChartWithThreeSetsWithInvalidValues.parameters={...VennChartWithThreeSetsWithInvalidValues.parameters,docs:{...VennChartWithThreeSetsWithInvalidValues.parameters?.docs,source:{originalSource:"() => <>\n        <h2>Venn Chart with 3 sets</h2>\n        <div style={{\n    width: '1200px',\n    height: '600px'\n  }}>\n            <VennChart summary={summary3} operations={operations3WithInvalids} handleIndexChange={function (queries, index): void {\n      throw new Error('Function not implemented.');\n    }} handleClose={function (): void {\n      throw new Error('Function not implemented.');\n    }} savedSets={[]} handleSubmit={function (): void {\n      throw new Error('Function not implemented.');\n    }} options={[{\n      label: 'Participants',\n      value: 'participant',\n      tabId: 'participants',\n      icon: <UserOutlined size={16} />\n    }, {\n      label: 'Biospecimens',\n      value: 'biospecimen',\n      tabId: 'biospecimens',\n      icon: <ExperimentOutlined size={16} />\n    }, {\n      label: 'Data files',\n      value: 'file',\n      tabId: 'data files',\n      icon: <FileTextOutlined size={16} />\n    }]} analytics={{\n      trackVennViewInExploration: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennClickOnSections: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewSet: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewEntityCounts: function (type: string, entityCount: number): void {\n        throw new Error('Function not implemented.');\n      }\n    }} />\n        </div>\n    </>",...VennChartWithThreeSetsWithInvalidValues.parameters?.docs?.source}}},VennChartWithEntitySwitchedByDefault.parameters={...VennChartWithEntitySwitchedByDefault.parameters,docs:{...VennChartWithEntitySwitchedByDefault.parameters?.docs,source:{originalSource:"() => <>\n        <h2>Venn Chart with 3 sets</h2>\n        <div style={{\n    width: '1200px',\n    height: '600px'\n  }}>\n            <VennChart summary={summary3} operations={operations3WithInvalids} handleIndexChange={function (queries, index): void {\n      throw new Error('Function not implemented.');\n    }} handleClose={function (): void {\n      throw new Error('Function not implemented.');\n    }} savedSets={[]} handleSubmit={function (): void {\n      throw new Error('Function not implemented.');\n    }} options={[{\n      label: 'Participants',\n      value: 'participant',\n      tabId: 'participants',\n      icon: <UserOutlined size={16} />\n    }, {\n      label: 'Biospecimens',\n      value: 'biospecimen',\n      tabId: 'biospecimens',\n      icon: <ExperimentOutlined size={16} />\n    }, {\n      label: 'Data files',\n      value: 'file',\n      tabId: 'data files',\n      icon: <FileTextOutlined size={16} />\n    }]} analytics={{\n      trackVennViewInExploration: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennClickOnSections: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewSet: function (): void {\n        throw new Error('Function not implemented.');\n      },\n      trackVennViewEntityCounts: function (type: string, entityCount: number): void {\n        throw new Error('Function not implemented.');\n      }\n    }} />\n        </div>\n    </>",...VennChartWithEntitySwitchedByDefault.parameters?.docs?.source}}};let __namedExportsOrder=["VennLoading","VennChartWithTwoSets","VennChartWithThreeSets","VennChartWithThreeSetsWithInvalidValues","VennChartWithEntitySwitchedByDefault"]}}]);